[{
    "aliases": [
      "profile"
    ],
    "description": "Generates a profile for the user summoned. Has customisable elements through the commands `${generic}finger` and `${generic}asl`. Supports linking to lichess, chess.com, and bughousetest.com accounts on second page.",
    "usage": [
      "profile",
      "profile theLAZYmd",
      "profile 338772451565502474",
      "profile littleplotkin"
    ],
    "module": "Profile",
    "file": "profile",
    "method": "get",
    "arguments": ["args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "asl"
    ],
    "description": "Sets user age, sex, and location information. Requires three arguments. Use `-` to set null. Simply write `clear` to set all to null. Information appears on `${generic}profile`.",
    "usage": [
      "asl",
      "asl 18 male Toulouse",
      "asl - female -",
      "asl clear"
    ],
    "module": "Profile",
    "file": "asl",
    "method": "run",
    "arguments": ["args", "dbuser"],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [0, 1, 3]
      }
    }
  },
  {
    "aliases": [
      "setusername"
    ],
    "description": "Sets bot client's username to a the single argument given.",
    "usage": [
      "setusername LAZYbot"
    ],
    "module": "Administration",
    "file": "set",
    "method": "username",
    "arguments": ["args"],
    "prefix": "generic",
    "requires": {
      "user": "owner"
    }
  },
  {
    "aliases": [
      "setprefix"
    ],
    "description": "Sets the default prefix for commands for this server to the argument given. Prefixes are followed by spaces.",
    "usage": [
      "setprefix =="
    ],

    "module": "Administration",
    "file": "set",
    "method": "genericprefix",
    "arguments": ["argument"],
    "prefix": "generic",
    "requires": {
      "user": "owner"
    }
  },
  {
    "aliases": [
      "setnadekoprefix"
    ],
    "description": "Sets the prefix for commands emulating Nadeko comands for this server. Prefixes are followed by spaces.",
    "usage": [
      "setnadekoprefix !"
    ],

    "module": "Administration",
    "file": "set",
    "method": "nadekoprefix",
    "arguments": ["argument"],
    "prefix": "nadeko",
    "requires": {
      "user": "owner"
    }
  },
  {
    "aliases": [
      "UStoDecimal",
      "toDec",
      "toDecimal"
    ],
    "description": "Takes betting odds in the form of US numbers and converts them to Decimal odds.",
    "usage": [
      "UStoDecimal -160"
    ],
    "module": "Calculation",
    "file": "calc",
    "method": "todecimal",
    "arguments": ["args"],
    "prefix": "nadeko",
    "requires": {
      "args": {
        "length": 1
      }
    }
  },
  {
    "aliases": [
      "DecimaltoUS",
      "toUS"
    ],
    "description": "Takes betting odds in the form of decimal numbers and converts them to the American odds system.",
    "usage": [
      "DecimaltoUS 1.7"
    ],
    "module": "Calculation",
    "file": "calc",
    "method": "tous",
    "arguments": ["args"],
    "prefix": "nadeko",
    "requires": {
      "args": {
        "length": 1
      }
    }
  },
  {
    "aliases": [
      "tournamentformula",
      "tf"
    ],
    "description": "Gets the reward currency for hosting a tournament. Requires three arguments of [games played in that tournament], [time control], [increment].",
    "usage": [
      "tournamentformula 620 0.5 0",
      "tf 84 3 1"
    ],
    "module": "Calculation",
    "file": "calc",
    "method": "tf",
    "arguments": ["args"],
    "prefix": "nadeko",
    "requires": {
      "args": {
        "length": 3
      }
    }
  },
  {
    "aliases": [
      "fetch",
      "fetchmessage"
    ],
    "description": "Fetches a message from that channel from the id. Enable developer mode, then click on message options get its id. Have second argument of channel name if desired message is not in that channel.",
    "usage": [
      "fetch 468744017912528917",
      "fetch 468727229359325184 general"
    ],
    "module": "Utility",
    "file": "utility",
    "method": "fetch",
    "arguments": ["message", "args"],
    "prefix": "nadeko"
  },
  {
    "aliases": [
      "lastmessage",
      "last"
    ],
    "description": "Fetches the last message of a user. Defaults to self.",
    "usage": [
      "lastmessage",
      "last"
    ],
    "module": "Utility",
    "file": "messagecount",
    "method": "last",
    "arguments": ["argument"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "addcustreact",
      "acr",
      "addcustomreaction"
    ],
    "description": "Addes add a new text custom reaction to react to keywords in new messages.",
    "usage": [
      "acr marco? polo!",
      "acr party :tada:"
    ],
    "module": "Custom Reactions",
    "file": "customreactions",
    "method": "add",
    "arguments": ["args", "argument"],
    "prefix": "generic",
    "requires": {
      "role": ["admin", "mod"]
    }
  },
  {
    "aliases": [
      "editcustreact",
      "ecr",
      "editcustomreaction"
    ],
    "description": "Edits an existing text custom reaction.",
    "usage": [
      "ecr party It's party time!"
    ],
    "module": "Custom Reactions",
    "file": "customreactions",
    "method": "edit",
    "arguments": ["args", "argument"],
    "prefix": "generic",
    "requires": {
      "role": ["admin", "mod"]
    }
  },
  {
    "aliases": [
      "togcustreact",
      "tcr",
      "togglecustomreaction"
    ],
    "description": "Toggles whether an existing text reaction is triggered from a keyword anywhere in the message.",
    "usage": [
      "tcr party"
    ],
    "module": "Custom Reactions",
    "file": "customreactions",
    "method": "toggle",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "role": ["admin", "mod"]
    }
  },
  {
    "aliases": [
      "delcustreact",
      "dcr",
      "deletecustomreaction"
    ],
    "description": "Deletes a emssage reaction.",
    "usage": [
      "dcr no"
    ],
    "module": "Custom Reactions",
    "file": "customreactions",
    "method": "delete",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "role": ["admin", "mod"]
    }
  },
  {
    "aliases": [
      "addemoreact",
      "aer",
      "addemojireaction"
    ],
    "description": "Addes add a new emoji to react to messages containing keywords.",
    "usage": [
      "aer lazy lazy"
    ],
    "module": "Custom Reactions",
    "file": "customreactions",
    "method": "add",
    "arguments": ["args", "argument"],
    "prefix": "generic",
    "requires": {
      "role": ["admin", "mod"]
    }
  },
  {
    "aliases": [
      "editemoreact",
      "eer",
      "editemojireaction"
    ],
    "description": "Edits an existing emoji custom reaction.",
    "usage": [
      "ecr cri lul"
    ],
    "module": "Custom Reactions",
    "file": "customreactions",
    "method": "edit",
    "arguments": ["args", "argument"],
    "prefix": "generic",
    "requires": {
      "role": ["admin", "mod"]
    }
  },
  {
    "aliases": [
      "togemoreact",
      "ter",
      "toggleemojireaction"
    ],
    "description": "Toggles whether an existing emoji reaction is triggered from a keyword anywhere in the message.",
    "usage": [
      "ter party"
    ],
    "module": "Custom Reactions",
    "file": "customreactions",
    "method": "toggle",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "role": ["admin", "mod"]
    }
  },
  {
    "aliases": [
      "delemoreact",
      "der",
      "deleteemojireaction"
    ],
    "description": "Deletes an emoji reaction.",
    "usage": [
      "der obi"
    ],
    "module": "Custom Reactions",
    "file": "customreactions",
    "method": "delete",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "role": ["admin", "mod"]
    }
  },
  {
    "aliases": [
      "messages",
      "messagecount"
    ],
    "description": "Returns number of messages for a given user. If none provided, defaults to self.",
    "usage": [
      "messages",
      "messages littleplotkin"
    ],
    "module": "Profile",
    "file": "messagecount",
    "method": "get",
    "arguments": ["args", "user"],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [0, 1]
      }
    }
  },
  {
    "aliases": [
      "updatemessages",
      "umc",
      "updatemessagecount"
    ],
    "description": "Edits the number of messages for a given user. If none provided, defaults to self.",
    "usage": [
      "updatemessages 63430",
      "updatemessgecount obi 42000"
    ],
    "module": "Profile",
    "file": "messagecount",
    "method": "update",
    "arguments": ["user"],
    "prefix": "generic",
    "requires": {
      "user": "owner",
      "args": {
        "length": [1, 2]
      }
    }
  },
  {
    "aliases": [
      "uptime",
      "sincebleepbloop"
    ],
    "description": "Returns the time elapsed since last bot restart. Note that host server glitch.com auto-restarts every 12 hours.",
    "usage": [
      "uptime"
    ],
    "module": "Utility",
    "file": "utility",
    "method": "uptime",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": 0
      }
    }
  },
  {
    "aliases": [
      "award"
    ],
    "description": "Awards currency through the Nadeko bot. Bot owner only!",
    "usage": [
      "award 100 Kyle"
    ],
    "module": "Currency",
    "file": "currency",
    "method": "on",
    "arguments": ["channel"],
    "prefix": "nadeko",
    "requires": {
      "house": true,
      "response": "bouncer",
      "args": {
        "length": [2, "++"]
      }
    }
  },
  {
    "aliases": [
      "take"
    ],
    "description": "Takes currency through the Nadeko bot. Bot owner only!",
    "usage": [
      "take 100 littleplotkin"
    ],
    "module": "Currency",
    "file": "currency",
    "method": "on",
    "arguments": ["channel"],
    "prefix": "nadeko",
    "requires": {
      "house": true,
      "response": "bouncer",
      "args": {
        "length": [2, "++"]
      }
    }
  },
  {
    "aliases": [
      "timely"
    ],
    "description": "Use to claim your 'timely' currency. Bot owner has to specify the amount and the period on how often you can claim your currency.",
    "usage": [
      "timely"
    ],
    "module": "Currency",
    "file": "currency",
    "method": "timely",
    "arguments": [],
    "prefix": "nadeko",
    "requires": {
      "house": true,
      "channels": ["bot"],
      "response": "bouncer",
      "args": {
        "length": 0
      }
    }
  },
  {
    "aliases": [
      "puzzleadd"
    ],
    "description": "Adds a new puzzle to be presented formally to the channel and added to a temporary db of puzzles.",
    "usage": [
      "puzzleadd https://lichess.org/@/puzzlename.jpg",
      "puzzleadd [with image attached]"
    ],
    "module": "Chess",
    "file": "puzzle",
    "method": "add",
    "arguments": ["message", "argument", "author", "channel"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "puzzles"
    ],
    "description": "View currently active puzzles. Puzzles stay active for a maximum of 12 hours or until they are closed by the author.",
    "usage": [
      "puzzles"
    ],
    "module": "Chess",
    "file": "puzzle",
    "method": "view",
    "arguments": [],
    "prefix": "generic"
  },
  {
    "aliases": [
      "puzzle"
    ],
    "description": "Fetches an active puzzle by its index. If no arguments provided, displays all puzzles and awaits index input.",
    "usage": [
      "puzzle",
      "puzzle 1"
    ],
    "module": "Chess",
    "file": "puzzle",
    "method": "view",
    "arguments": [],
    "prefix": "generic"
  },
  {
    "aliases": [
      "puzzleclose"
    ],
    "description": "Closes an active puzzle by index. Only possible if you created the puzzle.",
    "usage": [
      "puzzleclose 1"
    ],
    "module": "Chess",
    "file": "puzzle",
    "method": "view",
    "arguments": [],
    "prefix": "generic"
  },
  {
    "aliases": [
      "leaderboard",
      "lb"
    ],
    "description": "Posts the leaderboard for House Members of that variant on a given source. Based on linked accounts through the `${generic}lichess` and `${generic}chesscom` commands.",
    "usage": [
      "lb",
      "lb zh chesscom",
      "lb bug"
    ],
    "module": "Chess",
    "file": "leaderboard",
    "method": "variant",
    "arguments": ["channel", "args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "testingmode",
      "tm"
    ],
    "subcommands": [
      ["Bouncer", {
        "true": "Allows Bouncer individually to view the testing channels.",
        "false": "Blocks Bouncer individually from viewing the testing channels."
      }],
      ["LAZYbot", {
        "true": "Allows LAZYbot individually to view the testing channels.",
        "false": "Blocks LAZYbot individually from viewing the testing channels."
      }]
    ],
    "description": "Toggles testing mode, which disables LAZYbot and Bouncer's permissions in the #spam and #devs channels. Specify 'true false' to just apply to one or the other.",
    "usage": [
      "tm",
      "tm true false",
      "tm false true"
    ],
    "module": "Utility",
    "file": "states",
    "method": "tm",
    "arguments": ["args"],
    "prefix": "nadeko",
    "requires": {
      "house": true
    }
  },
  {
    "aliases": [
      "botcontingencyplan",
      "bcp"
    ],
    "description": "Switches whether Nadeko or Bouncer has 'Bot-in-Use' role (full permission for server). To be used when Bouncer is offline, triggers automatically.",
    "usage": [
      "bcp"
    ],
    "module": "Utility",
    "file": "states",
    "method": "bcp",
    "arguments": [],
    "prefix": "nadeko",
    "requires": {
      "house": true
    }
  },
  {
    "aliases": [
      "finger"
    ],
    "description": "Sets finger message. Can be viewed through `${generic}profile` or `${generic}finger`. Use `${generic}finger clear` to clear finger message. Otherwise just type `${generic}finger [your message here]` to set your message. Feel free to advertise your favourite things. Max limit of 500 characters",
    "usage": [
      "finger",
      "finger chuckmoulton",
      "finger clear",
      "finger twitch.tv/thelazymd"
    ],
    "module": "Profile",
    "file": "finger",
    "method": "run",
    "arguments": ["args", "argument", "author"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "notify",
      "tournamentnotify"
    ],
    "description": "Alerts the players in the chanel to a new tournament you have created. Only accessible to Bronze++ members once every hour to prevent spam.",
    "usage": [
      "notify https://lichess.org/tournament/Cr4NUyl2"
    ],
    "module": "Utility",
    "file": "notifications",
    "method": "run",
    "arguments": ["args", "argument"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "fakeban",
      "bann"
    ],
    "description": "A fake ban. You're not really banned. Jokes.",
    "usage": [
      "fb DragonMateZ"
    ],
    "module": "Administration",
    "file": "ban",
    "method": "fake",
    "arguments": ["args"],
    "prefix": "generic",
    "requires": {
      "role": "admin"
    }
  },
  {
    "aliases": [
      "ban"
    ],
    "description": "Bans a user. Only to be used in extrenuating circumstances. First argument given is the user. Second, if provided is the number of days for which to delete their messages. Anything else is given as the reason for the ban.",
    "usage": [
      "ban pigeons",
      "ban TrumpMAGA2020 7 Spamming inappropriately."
    ],
    "module": "Administration",
    "file": "ban",
    "method": "real",
    "arguments": ["args"],
    "prefix": "generic",
    "requires": {
      "role": "admin"
    }
  },
  {
    "aliases": [
      "color",
      "colour"
    ],
    "description": "Sets your personal role colour to anything you want. Requires you to have bought the feature using `${nadeko}shop`. A colour is anything that fits [this criteria](https://discord.js.org/#/docs/main/stable/typedef/ColorResolvable).",
    "usage": [
      "color #36393F",
      "color 255, 26, 26",
      "color NAVY_BLUE"
    ],
    "module": "Profile",
    "file": "color",
    "method": "run",
    "arguments": ["member"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "fen"
    ],
    "description": "Renders a position from an fen string.",
    "usage": [
      "fen 8/p7/7p/1k3pp1/1P2pP2/2K1P1PP/8/8 w - - 0 41",
      "fen r1b2rk1/ppppBp1p/7p/8/4Q3/P1q5/P1P1KPPP/R4B1R/NPBnnppn b - - 37 19",
      "fen 5r2/pp2Q1pk/4pr1p/5p1P/3N1P2/2P1q1PK/PP6/3R4 w - - 0 1 +0+1"
    ],
    "module": "Chess",
    "file": "fen",
    "method": "run",
    "arguments": [],
    "prefix": "generic"
  },
  {
    "aliases": [
      "election"
    ],
    "description": "Displays current election data. Use action to configure the election.",
    "subcommands": [
      ["action", {
        "initiate": "Readies a server for a new election, using default settings.",
        "config": "Changes the settings for an upcoming election, resetting any previous voting data and registered voters.",
        "reset": "Sets election config data to the default.",
        "clear": "Resets previous voting data."
      }]
    ],
    "usage": [
      "election",
      "election initiate",
      "election config",
      "election reset",
      "election clear"
    ],
    "module": "Election",
    "file": "election/election",
    "method": "run",
    "arguments": ["args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "voters"
    ],
    "description": "Performs an action on the voters register for an upcoming election on the server. Leave blank to display list of voters and elections.",
    "subcommands": [
      ["action", {
        "register": "Registers voters ready for a new election. Resets previous voting data.",
        "disqualify": "Removes a voter from all election records.",
        "get": "Gets the list of eligble voters for a channel. To be used in #spam only."
      }]
    ],
    "usage": [
      "voters",
      "voters register",
      "voters disqualify",
      "voters get"
    ],
    "module": "Election",
    "file": "election/voters",
    "method": "run",
    "arguments": ["args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "eligible"
    ],
    "description": "Lists the ballots for which a user is eligible to vote. Defaults to self.",
    "usage": [
      "eligible",
      "eligible hauptschule"
    ],
    "module": "Election",
    "file": "election/voters",
    "method": "eligible",
    "arguments": ["argument"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "candidates",
      "I declare my intention to run as candidate for"
    ],
    "description": "Registers a candiate.",
    "subcommands": [
      [
        "action",
        {
          "register": "Registers a candidate. Give argument of channel that you wish to run for.",
          "open": "Opens candidate registration. Done automatically when voter lists are registered.",
          "close": "Closes candidate registration."
        }
      ]
    ],
    "usage": [
      "candidates register zh",
      "candidates register littleplotkin"
    ],
    "module": "Election",
    "file": "election/candidates",
    "method": "run",
    "arguments": ["args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "ballots"
    ],
    "description": "Sends ballots.",
    "subcommands": [
      [
        "number",
        {
          "all": "Sends all ballots, initiates the voting stage of the election.",
          "one": "Sends one ballot to a specified user.",
          "mobile": "Sends mobile ballots to a specified user. `${generic}mobile` in DMs does the same thing."
        }
      ]
    ],
    "usage": [
      "ballots all",
      "ballots one MMichael",
      "ballots mobile littleplotkin"
    ],
    "module": "Election",
    "file": "election/ballots",
    "method": "run",
    "arguments": ["args"],
    "prefix": "generic",
    "requires": {
      "role": "admin",
      "args":{
        "length": [1, "++"]
      }
    }
  },
  {
    "aliases": [
      "votes"
    ],
    "description": "Collates valid votes received for an election.",
    "subcommands": [
      [
        "action",
        {
          "close": "Closes voting on this server for all elections.",
          "open": "Reopens voting on a server for all elections.",
          "count": "Counts up the votes and saves the results, ready to be outputted."
        }
      ]
    ],
    "usage": [
      "votes close",
      "votes open",
      "votes count"
    ],
    "module": "Election",
    "file": "election/votes",
    "method": "run",
    "arguments": ["args"],
    "prefix": "generic",
    "requires": {
      "role": "admin",
      "args":{
        "length": 1
      }
    }
  },
  {
    "aliases": [
      "results"
    ],
    "description": "Outputs the results of a recent election.",
    "usage": [
      "results"
    ],
    "module": "Election",
    "file": "election",
    "method": "postResults",
    "arguments": [],
    "prefix": "generic"
  },
  {
    "aliases": [
      "instantrunoff",
      "IRV"
    ],
    "description": "Display information about an Instant Run Off Election.",
    "subcommands": [
      [
        "action",
        {
          "mock": "Generates mock data for an IRV election."
        }
      ]
    ],
    "usage": [
      "IRV",
      "IRV mock"
    ],
    "module": "Election",
    "file": "election/electorals/irv",
    "method": "run",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "args":{
        "length": [0, 1]
      }
    }
  },
  {
    "aliases": [
      "t",
      "trivia"
    ],
    "description": "Initiates new trivia game on Bouncer; begins process of registering rating on LAZYbot. Pokemon games are invalid.",
    "usage": [
      "t",
      "t --timeout 5 -w 3 -q 10"
    ],
    "module": "Trivia",
    "file": "trivia",
    "method": "init",
    "arguments": ["args"],
    "prefix": "nadeko",
    "requires": {
      "response": "bot"
    }
  },
  {
    "aliases": [
      "tq"
    ],
    "description": "Ends a trivia game on Bouncer.",
    "usage": [
      "tq"
    ],
    "module": "Trivia",
    "file": "trivia",
    "method": "end",
    "arguments": [],
    "prefix": "nadeko",
    "requires": {
      "response": "bot"
    }
  },
  {
    "aliases": [
      "lichess"
    ],
    "description": "Links your Discord user profile to a lichess account.",
    "usage": [
      "lichess",
      "lichess littleplotkin"
    ],
    "module": "Chess",
    "file": "tracker",
    "method": "run",
    "arguments": ["command", "args"],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [0, 1, 2]
      }
    }
  },
  {
    "aliases": [
      "chesscom",
      "chess.com"
    ],
    "description": "Links your Discord user profile to a Chess.com account.",
    "usage": [
      "chesscom",
      "chesscom schoolmeester"
    ],
    "module": "Chess",
    "file": "tracker",
    "method": "run",
    "arguments": ["command", "args"],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [0, 1, 2]
      }
    }
  },
  {
    "aliases": [
      "bughousetest",
      "bht"
    ],
    "description": "Links your Discord user profile to a bughousetest.com account.",
    "usage": [
      "bughousetest",
      "bughousetest thepinky"
    ],
    "module": "Chess",
    "file": "tracker",
    "method": "run",
    "arguments": ["command", "args"],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [0, 1, 2]
      }
    }
  },
  {
    "aliases": [
      "remove"
    ],
    "description": "Removes a linked account. Please specify source afterwards.",
    "usage": [
      "remove lichess",
      "remove lichess theLAZYmd"
    ],
    "module": "Chess",
    "file": "tracker",
    "method": "run",
    "arguments": ["command", "args"],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [1, 2, 3]
      }
    }
  },
  {
    "aliases": [
      "update"
    ],
    "description": "Updates a user on all their accounts.",
    "usage": [
      "update",
      "update theLAZYmd"
    ],
    "module": "Chess",
    "file": "tracker",
    "method": "update",
    "arguments": ["argument"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "eval"
    ],
    "description": "Use to evaluated javascript code. Bot owner only, for obvious reasons.",
    "usage": [
      "eval ```js this.channel.send(Date.now())```"
    ],
    "module": "Administration",
    "file": "eval",
    "method": "run",
    "arguments": ["args", "argument"],
    "prefix": "generic",
    "requires": {
      "user": "owner"
    }
  },
  {
    "aliases": [
      "myrank",
      "rank"
    ],
    "description": "Gets the rank of a user across all leaderboards. Default is yourself.",
    "usage": [
      "myrank",
      "myrank DragonMateZ"
    ],
    "module": "Chess",
    "file": "rank",
    "method": "variant",
    "arguments": ["argument"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "commands",
      "cmds"
    ],
    "description": "List the stable commands availabe on the bot.",
    "usage": [
      "commands",
      "cmds"
    ],
    "module": "Help",
    "file": "commands",
    "method": "list",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": 0
      }
    }
  },
  {
    "aliases": [
      "help",
      "h"
    ],
    "description": "Displays help info for a given command.",
    "usage": [
      "help",
      "help !lichess"
    ],
    "module": "Help",
    "file": "help",
    "method": "run",
    "arguments": ["args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "guide",
      ".."
    ],
    "description": "Displays a guide - a multipage information about something. There are guides for each variant! Compiled by the members of our community. Use `${nadeko}.. guides` to see info on how to contribute to them.",
    "usage": [
      ".. zh",
      ".. anti",
      ".. guides",
      ".. flowers"
    ],
    "module": "Utility",
    "file": "embeds",
    "method": "find",
    "arguments": ["args"],
    "prefix": "nadeko",
    "requires": {
      "args": {
        "length": 1
      }
    }
  },
  {
    "aliases": [
      "..."
    ],
    "description": "Posts a guide that haspages that can swtich permanently. Use `${nadeko}.. guides` to see info on how to contribute to them.",
    "usage": [
      "... cwc"
    ],
    "module": "Utility",
    "file": "embeds",
    "method": "find",
    "arguments": ["args"],
    "prefix": "nadeko",
    "requires": {
      "args": {
        "length": 1
      }
    }
  },
  {
    "aliases": [
      "guides"
    ],
    "description": "Lists all guides. There are guides for each variant! Compiled by the members of our community. Use `${nadeko}.. GuideName` to view each one individually. Use `${nadeko}.. guides` to see info on how to contribute to them.",
    "usage": [
      "guides"
    ],
    "module": "Utility",
    "file": "embeds",
    "method": "list",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [0]
      }
    }
  },
  {
    "aliases": [
      "Markdownify"
    ],
    "description": "Fetches a message, but instead of outputting the same message, if the message has content, outputs the raw markdown required to produce that text. Developer's tool.",
    "usage": [
      "markdownify 390262198385246210 welcome",
      "markdownify 470270623688425472"
    ],
    "module": "Utility",
    "file": "utility",
    "method": "markdownify",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [1, 2]
      }
    }
  },
  {
    "aliases": [
      "JSONify"
    ],
    "description": "Fetches a message, but instead of outputting the same message, if and only if the message has an embed, outputs the raw JSON required to produce that embed. Developer's tool.",
    "usage": [
      "JSONify 481094704864296972",
      "JSONify 470270666818584599 announcements"
    ],
    "module": "Utility",
    "file": "utility",
    "method": "jsonify",
    "arguments": [],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [1, 2]
      }
    }
  },
  {
    "aliases": [
      "odds"
    ],
    "description": "Begins process to generate a given type of odds. Please specify type requested.",
    "subcommands": [
      ["type", {
        "series": "A fixed number of games between two players.",
        "match": "A set that ends when one player reaches a certain score (ex: first to 10).",
        "arena": "A tournament for which there are no fixed 'rounds'."
      }]
    ],
    "usage": [
      "odds series",
      "odds match",
      "odds arena"
    ],
    "module": "Calculation",
    "file": "odds",
    "method": "run",
    "arguments": ["args"],
    "prefix": "generic",
    "requires": {
      "args": {
        "length": [1]
      }
    }
  },
  {
    "aliases": [
      "calculate",
      "calc"
    ],
    "description": "Performs operation listed in the [Math object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math).\nPlease use format `operation(arguments)`, or it will not register.\nCustom operations listed below.",
    "usage": [
      "calc choose(10, 3)",
      "calc binomial(10, 0.75, 6)",
      "calc negativebinomial(21, 0.6, 40, false)",
      "calc permutations(6, 4)"
    ],
    "module": "Calculation",
    "file": "maths",
    "method": "run",
    "arguments": ["argument"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "upversion"
    ],
    "description": "Increases the semantic version count of the bot in package.json and in the nickname. Give argument `big` to increase Y count, `huge` to increase X count.",
    "usage": [
      "upversion",
      "upversion big",
      "upversion huge"
    ],
    "module": "Administration",
    "file": "set",
    "method": "upversion",
    "arguments": ["argument"],
    "prefix": "generic",
    "requires": {
      "user": "owner"
    }
  },
  {
    "aliases": [
      "downversion"
    ],
    "description": "Decreases the semantic version count of the bot in package.json and in the nickname. Give argument `big` to decrease Y count, `huge` to decrease X count.",
    "usage": [
      "downversion",
      "downversion big",
      "downversion huge"
    ],
    "module": "Administration",
    "file": "set",
    "method": "downversion",
    "arguments": ["argument"],
    "prefix": "generic",
    "requires": {
      "user": "owner"
    }
  },
  {
    "aliases": [
      "version"
    ],
    "description": "Sets the semantic version of LAZYbot to a custom specified value. Leave empty to return current value.",
    "usage": [
      "version",
      "version 1.5.2"
    ],
    "module": "Administration",
    "file": "set",
    "method": "version",
    "arguments": ["argument"],
    "prefix": "generic",
    "requires": {
      "user": "owner"
    }
  },
  {
    "aliases": [
      "emoji"
    ],
    "description": "Reacts to your message with all emoji listed in the message as separate words.",
    "usage": [
      "emoji lichess",
      "emoji ✅ ❎"
    ],
    "module": "Custom Reactions",
    "file": "emoji",
    "method": "emoji",
    "arguments": ["args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "react"
    ],
    "description": "Reacts to a given message, or if name provided, their last in the channel, with all emoji listed in the message as separate words.\nCan use animated emoji.\nFirst argument must be message ID or user.",
    "usage": [
      "react ijh hyperpoggers",
      "react 482013403595014155 lichess chesscom bughousetest"
    ],
    "module": "Custom Reactions",
    "file": "emoji",
    "method": "react",
    "arguments": ["args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "gild"
    ],
    "description": "Gilds a given message, or if name provided, their last in the channel.\nCosts 1 🌸 to use.",
    "usage": [
      "gild fumitoks",
      "gild 481994356106985493"
    ],
    "module": "Currency",
    "file": "emoji",
    "method": "gild",
    "arguments": ["args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "members"
    ],
    "description": "Returns the number of members in the database.",
    "usage": [
      "members"
    ],
    "module": "Utility",
    "file": "utility",
    "method": "members",
    "arguments": [],
    "prefix": "generic"
  },
  {
    "aliases": [
      "ping"
    ],
    "description": "Returns the bot's ping in milliseconds.\n**Note:** this is not your ping! This is the time taken for a client-emitted event to reach the bot, not how long it takes you to send a message.",
    "usage": [
      "ping"
    ],
    "module": "Utility",
    "file": "utility",
    "method": "ping",
    "arguments": [],
    "prefix": "generic"
  },
  {
    "aliases": [
      "trophy"
    ],
    "description": "Adds, edits, or removes a trophy for a user.",
    "usage": [
      "trophy add penguingim1 Reached 3000!"
    ],
    "module": "Profile",
    "file": "trophy",
    "method": "run",
    "arguments": ["args"],
    "prefix": "generic",
    "requires": {
      "user": "owner"
    }
  },
  {
    "aliases": [
      "send"
    ],
    "description": "Sends a ModMail to a specified user. Use `-s` or `--server` flag to send as anonymous.",
    "usage": [
      "send bakkouz -s",
      "send penguingim1"
    ],
    "module": "Administration",
    "file": "modmail",
    "method": "outgoing",
    "arguments": ["args"],
    "prefix": "generic"
  },
  {
    "aliases": [
      "backup"
    ],
    "description": "Backs up the database to a given file.",
    "usage": [
      "backup",
      "backup 1",
      "backup 2",
      "backup 3"
    ],
    "module": "Administration",
    "file": "backup",
    "method": "force",
    "arguments": ["args"],
    "prefix": "generic",
    "requires": {
      "user": "owner"
    }
  },
  {
    "aliases": [
      "restore"
    ],
    "description": "Restores the database from a given file.",
    "usage": [
      "restore"
    ],
    "module": "Administration",
    "file": "backup",
    "method": "force",
    "arguments": ["args"],
    "prefix": "generic",
    "requires": {
      "user": "owner"
    }
  }
]
